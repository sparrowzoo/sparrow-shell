package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
package com.zhi.test;

import java.io.FileInputStream;

import java.io.FileReader;

import java.io.IOException;

import java.nio.ByteBuffer;

import java.nio.CharBuffer;

import java.nio.channels.FileChannel;

import java.nio.charset.Charset;

import java.nio.charset.CharsetDecoder;

import java.nio.file.Files;

import java.nio.file.Paths;

/**

* 文件读取，缓冲区大小（BF_SIZE）对NIO的性能影响特别大，对BIO无影响

* 10M的文件，BIO耗时87毫秒，NIO耗时68毫秒，Files.read耗时62毫秒

*

* @author 张远志

* @since 2020年5月9日19:20:49

*

*/

public class FileRead {

/**

* 缓冲区大小

*/

private static final int BF_SIZE = 1024;

/**

* 使用BIO读取文件

*

* @param fileName 待读文件名

* @return

* @throws IOException

*/

public static String bioRead(String fileName) throws IOException {

long startTime = System.currentTimeMillis();

try {

FileReader reader = new FileReader(fileName);

StringBuffer buf = new StringBuffer();

char[] cbuf = new char[BF_SIZE];

while (reader.read(cbuf) != -1) {

buf.append(cbuf);

}

reader.close();

return buf.toString();

} finally {

System.out.println("使用BIO读取文件耗时：" + (System.currentTimeMillis() - startTime) + "毫秒");

}

}
